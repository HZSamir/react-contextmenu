/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_1wpk4qajld = function () {var path = '/home/samir/Desktop/test/src/globalEventListener.js',hash = '9f8b4be011afd408a9f53e36c57677643ed607bd',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/home/samir/Desktop/test/src/globalEventListener.js', statementMap: { '0': { start: { line: 6, column: 8 }, end: { line: 6, column: 28 } }, '1': { start: { line: 8, column: 8 }, end: { line: 11, column: 9 } }, '2': { start: { line: 9, column: 12 }, end: { line: 9, column: 69 } }, '3': { start: { line: 10, column: 12 }, end: { line: 10, column: 69 } }, '4': { start: { line: 15, column: 8 }, end: { line: 17, column: 9 } }, '5': { start: { line: 16, column: 12 }, end: { line: 16, column: 79 } }, '6': { start: { line: 16, column: 48 }, end: { line: 16, column: 79 } }, '7': { start: { line: 21, column: 8 }, end: { line: 23, column: 9 } }, '8': { start: { line: 22, column: 12 }, end: { line: 22, column: 79 } }, '9': { start: { line: 22, column: 48 }, end: { line: 22, column: 79 } }, '10': { start: { line: 27, column: 19 }, end: { line: 27, column: 29 } }, '11': { start: { line: 29, column: 8 }, end: { line: 32, column: 10 } }, '12': { start: { line: 34, column: 8 }, end: { line: 34, column: 18 } }, '13': { start: { line: 38, column: 8 }, end: { line: 40, column: 9 } }, '14': { start: { line: 39, column: 12 }, end: { line: 39, column: 38 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 5, column: 4 }, end: { line: 5, column: 5 } }, loc: { start: { line: 5, column: 18 }, end: { line: 12, column: 5 } }, line: 5 }, '1': { name: '(anonymous_1)', decl: { start: { line: 14, column: 22 }, end: { line: 14, column: 23 } }, loc: { start: { line: 14, column: 33 }, end: { line: 18, column: 5 } }, line: 14 }, '2': { name: '(anonymous_2)', decl: { start: { line: 20, column: 22 }, end: { line: 20, column: 23 } }, loc: { start: { line: 20, column: 33 }, end: { line: 24, column: 5 } }, line: 20 }, '3': { name: '(anonymous_3)', decl: { start: { line: 26, column: 15 }, end: { line: 26, column: 16 } }, loc: { start: { line: 26, column: 47 }, end: { line: 35, column: 5 } }, line: 26 }, '4': { name: '(anonymous_4)', decl: { start: { line: 37, column: 17 }, end: { line: 37, column: 18 } }, loc: { start: { line: 37, column: 25 }, end: { line: 41, column: 5 } }, line: 37 } }, branchMap: { '0': { loc: { start: { line: 8, column: 8 }, end: { line: 11, column: 9 } }, type: 'if', locations: [{ start: { line: 8, column: 8 }, end: { line: 11, column: 9 } }, { start: { line: 8, column: 8 }, end: { line: 11, column: 9 } }], line: 8 }, '1': { loc: { start: { line: 16, column: 12 }, end: { line: 16, column: 79 } }, type: 'if', locations: [{ start: { line: 16, column: 12 }, end: { line: 16, column: 79 } }, { start: { line: 16, column: 12 }, end: { line: 16, column: 79 } }], line: 16 }, '2': { loc: { start: { line: 22, column: 12 }, end: { line: 22, column: 79 } }, type: 'if', locations: [{ start: { line: 22, column: 12 }, end: { line: 22, column: 79 } }, { start: { line: 22, column: 12 }, end: { line: 22, column: 79 } }], line: 22 }, '3': { loc: { start: { line: 38, column: 8 }, end: { line: 40, column: 9 } }, type: 'if', locations: [{ start: { line: 38, column: 8 }, end: { line: 40, column: 9 } }, { start: { line: 38, column: 8 }, end: { line: 40, column: 9 } }], line: 38 }, '4': { loc: { start: { line: 38, column: 12 }, end: { line: 38, column: 36 } }, type: 'binary-expr', locations: [{ start: { line: 38, column: 12 }, end: { line: 38, column: 14 } }, { start: { line: 38, column: 18 }, end: { line: 38, column: 36 } }], line: 38 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var /* istanbul ignore next */_actions = require('./actions');
var /* istanbul ignore next */_helpers = require('./helpers');

class GlobalEventListener {
    constructor() {/* istanbul ignore next */this.








        handleShowEvent = event => {/* istanbul ignore next */cov_1wpk4qajld.f[1]++;cov_1wpk4qajld.s[4]++;
            for (const id in this.callbacks) {/* istanbul ignore next */cov_1wpk4qajld.s[5]++;
                if ( /* istanbul ignore next */(0, _helpers.hasOwnProp)(this.callbacks, id)) {/* istanbul ignore next */cov_1wpk4qajld.b[1][0]++;cov_1wpk4qajld.s[6]++;this.callbacks[id].show(event);} else /* istanbul ignore next */{cov_1wpk4qajld.b[1][1]++;}
            }
        }; /* istanbul ignore next */this.

        handleHideEvent = event => {/* istanbul ignore next */cov_1wpk4qajld.f[2]++;cov_1wpk4qajld.s[7]++;
            for (const id in this.callbacks) {/* istanbul ignore next */cov_1wpk4qajld.s[8]++;
                if ( /* istanbul ignore next */(0, _helpers.hasOwnProp)(this.callbacks, id)) {/* istanbul ignore next */cov_1wpk4qajld.b[2][0]++;cov_1wpk4qajld.s[9]++;this.callbacks[id].hide(event);} else /* istanbul ignore next */{cov_1wpk4qajld.b[2][1]++;}
            }
        }; /* istanbul ignore next */this.

        register = (showCallback, hideCallback) => {/* istanbul ignore next */cov_1wpk4qajld.f[3]++;
            const id = /* istanbul ignore next */(cov_1wpk4qajld.s[10]++, /* istanbul ignore next */(0, _helpers.uniqueId)()); /* istanbul ignore next */cov_1wpk4qajld.s[11]++;

            this.callbacks[id] = {
                show: showCallback,
                hide: hideCallback }; /* istanbul ignore next */cov_1wpk4qajld.s[12]++;


            return id;
        }; /* istanbul ignore next */this.

        unregister = id => {/* istanbul ignore next */cov_1wpk4qajld.f[4]++;cov_1wpk4qajld.s[13]++;
            if ( /* istanbul ignore next */(cov_1wpk4qajld.b[4][0]++, id) && /* istanbul ignore next */(cov_1wpk4qajld.b[4][1]++, this.callbacks[id])) {/* istanbul ignore next */cov_1wpk4qajld.b[3][0]++;cov_1wpk4qajld.s[14]++;
                delete this.callbacks[id];
            } else /* istanbul ignore next */{cov_1wpk4qajld.b[3][1]++;}
        }; /* istanbul ignore next */cov_1wpk4qajld.f[0]++;cov_1wpk4qajld.s[0]++;this.callbacks = {}; /* istanbul ignore next */cov_1wpk4qajld.s[1]++;if ( /* istanbul ignore next */_helpers.canUseDOM) {/* istanbul ignore next */cov_1wpk4qajld.b[0][0]++;cov_1wpk4qajld.s[2]++;window.addEventListener( /* istanbul ignore next */_actions.MENU_SHOW, this.handleShowEvent); /* istanbul ignore next */cov_1wpk4qajld.s[3]++;window.addEventListener( /* istanbul ignore next */_actions.MENU_HIDE, this.handleHideEvent);} else /* istanbul ignore next */{cov_1wpk4qajld.b[0][1]++;}}} /* istanbul ignore next */exports.default =


new GlobalEventListener();